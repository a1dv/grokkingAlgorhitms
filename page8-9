#_page8_
low = 0
high = len(list) - 1

#code mistake
#mid = (low + high) / 2
#python does NOT round not even numbers
#this mistake also appears on page 9
#how it has to be
mid = round((low + high) / 2) #Python не округляет числа самостоятельно, для этого воспользуемся функцией round()
guess = list[mid]

if guess < item:
	low = mid + 1

#_page9_

def binary_search(list, item):
    low = 0                         #low и high задают диапазон списка, в которых Вы будете искать
    high = len(list) - 1
    while low <= high:              #пока Вы не сузились до 1 элемента...
        mid = (low + high)          #...проверить средний элемент
        guess = list[mid]
        if guess == item:           #нашли item
            return mid
        if guess > item:            #guess слишком большой
            high = mid - 1		    #guess слишком маленький
        else:
            low = mid + 1
    return None                     #item не существует

my_list = [1, 3, 5, 7, 9]           #давайте проверим!
print(binary_search(my_list, 3))    #помним, списки начинаются с 0. Второй слот имеет индекс 1
print(binary_search(my_list, -1))   #None означает nil в Python. Это значит, что элемент не найден
 
#_TESTS_
checkList = [10, 1, 2, 75, 31, 55, 87, 1023, 654, 228, 1488]
print(binary_search(checkList, 1))     #1
print(binary_search(checkList, 31))    #4
print(binary_search(checkList, 87))    #6
print(binary_search(checkList, 1488))  #10
print(binary_search(checkList, 0))     #None
#код работает корректно
#_TESTS_
