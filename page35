#_page35_

"""Сортировка выбором (Selection sort) — алгоритм сортировки. Может быть как устойчивый, так и неустойчивый. На массиве из n элементов имеет время выполнения в худшем, среднем и лучшем случае Θ(n2), предполагая что сравнения делаются за постоянное время.
Алгоритм:

1. Находим номер минимального значения в текущем списке
2. Производим обмен этого значения со значением первой неотсортированной позиции (обмен не нужен, если минимальный элемент уже находится на данной позиции)
3. Теперь сортируем хвост списка, исключив из рассмотрения уже отсортированные элементы"""


#Алгоритм ищет индекс минимального элемента массива

def findSmallest(arr):
	smallest = arr[0] 
	smallest_index = 0 
	for i in range(1, len(arr)):
		if arr[i] < smallest:
			smallest = arr[i]              #хранит минимальное значение
			smallest_index = i             #хранит индекс минимального значения
	return smallest_index

arr = [3, 2, 8, 75, 100, 0, -9, 3, 4]      #6
print findSmallest(arr) 
arr = [0, 1, 3, 0, 0, 0]                   #0       
print findSmallest(arr) 
arr = [10, 3, -100]                        #2
print findSmallest(arr)
arr = []                                   #ERROR
print findSmallest(arr) 
arr = [99]                                 #0
print findSmallest(arr)

#Следует заметить, что алгоритм не переваривает пустые массивы. В целом, код работает корректно.
